name: Build Academic Paper

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-extra texlive-fonts-extra texlive-luatex
        wget https://github.com/jgm/pandoc/releases/download/3.1.2/pandoc-3.1.2-1-amd64.deb
        sudo dpkg -i pandoc-3.1.2-1-amd64.deb
        pandoc --version
        
    - name: Download bibliography
      run: |
        wget https://raw.githubusercontent.com/callumalpass/bibliography/main/bibliography.json

    - name: Generate documents
      run: |
        mkdir -p output
        for file in ms.*.md
        do
          filename=$(basename "$file" .md)
          perl -pe 's/\[\[.*?\|([^\]]+)\]\]/\1/g; s/\[\[([^\]]+)\]\]/\1/g' "$file" > "output/${filename}_no_links.md"
          echo "" >> "output/${filename}_no_links.md"
          echo "## References" >> "output/${filename}_no_links.md"
          common_args="--bibliography=bibliography.json --citeproc --csl=style/chicago-fullnote-bibliography.csl --file-scope -M date=$(date +'%Y-%m-%d')"
          pandoc "output/${filename}_no_links.md" -s -o "output/${filename}.pdf" $common_args --pdf-engine=lualatex -V 'mainfont:Cochineal' -V 'linespacing=2'
          pandoc "output/${filename}_no_links.md" -s -o "output/${filename}.html" $common_args --include-in-header=style/style.css --toc
          pandoc "output/${filename}_no_links.md" -s -o "output/${filename}.docx" $common_args
          rm "output/${filename}_no_links.md"
        done

    - name: Create and upload release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if ls output/*.{pdf,html,docx} 1> /dev/null 2>&1; then
          # Use the tag name for the release
          tag_name=${GITHUB_REF#refs/tags/}
          release_name="Release $tag_name"
          response=$(curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases -d "{\"tag_name\":\"$tag_name\",\"name\":\"$release_name\",\"draft\":false,\"prerelease\":false}")
          upload_url=$(echo "$response" | jq -r .upload_url | sed -e "s/{?name,label}//")
          for file in output/*.{pdf,html,docx}
          do
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: $(file -b --mime-type $file)" --data-binary @"$file" "${upload_url}?name=$(basename $file)"
          done
        else
          echo "No output files found. Skipping release creation."
        fi

    - name: Generate Dashboard
      run: |
        mkdir -p dashboard scripts
        cp -r $GITHUB_WORKSPACE/dashboard ./dashboard
        cp -r $GITHUB_WORKSPACE/scripts ./scripts
        export OUTPUT_DIR="output"
        export DASHBOARD_DIR="dashboard"
        node scripts/generate-dashboard-data.js
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output